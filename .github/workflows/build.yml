name: Flash Duplicate Finder - Multi-Architecture Build with Jib and GraalVM

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: amd64
            graalvm-container: ghcr.io/graalvm/graalvm-ce:22.3.3
          - arch: arm64
            graalvm-container: ghcr.io/graalvm/graalvm-ce:22.3.3
    container:
      image: ${{ matrix.graalvm-container }}
    steps:
      - name: Install Git
        run: |
          apt update
          apt install git -y
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check the project
        run: ./gradlew check

      - name: Build and push with Jib
        env:
          PLATFORM: ${{ matrix.platform }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          ARCHITECTURE: ${{ matrix.arch }}
          TAG: ${{ github.ref_name }}
        run: |
          ./gradlew jibNativeImage

      - name: Release with semantic release
        id: semantic_release
        uses: docker://macstab/semantic-release-maven-gradle-nodejs-python-git-jq:v1.6.3
        if: github.ref == 'refs/heads/main'
        with:
          entrypoint: /bin/sh
          workdir: /home/runner/work/${{ github.repository }}/${{ github.repository }}
          branches: 'main'
          args: -c "pwd && cp /configs/$CONFIG_FILE .releaserc && git config --global --add safe.directory /github/workspace && npx semantic-release --branches $RELEASE_BRANCH"
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_ENV: production
          GH_URL: https://github.com/${{ github.repository }}.git
          RELEASE_BRANCH: main
          CONFIG_FILE: .releaserc-gradle.json
          DEBUG: semantic-release:*
