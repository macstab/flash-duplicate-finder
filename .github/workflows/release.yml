#name: Flash Duplicate Finder - Multi-Architecture Build with Jib and GraalVM
#
#on:
#  push:
#    branches:
#      - main
#      - develop
#    tags:
#      - v*
#
#jobs:
#  release:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Check the project
#        run: ./gradlew check
#
#      - name: Release with Semantic Release
#        uses: docker://macstab/semantic-release-maven-gradle-nodejs-python-git-jq:v1.6.2
#        with:
#          entrypoint: /bin/sh
#          workdir: /home/runner/work/${{ github.repository }}/${{ github.repository }}
#          branches: 'main'
#          args: -c "cp /configs/$CONFIG_FILE .releaserc && git config --global --add safe.directory /github/workspace && npx semantic-release --branches $RELEASE_BRANCH"
#        env:
#          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#          NODE_ENV: production
#          GH_URL: https://github.com/${{ github.repository }}.git
#          RELEASE_BRANCH: main
#          CONFIG_FILE: .releaserc-gradle.json
#          DEBUG: semantic-release:*
#  build:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        include:
#          - arch: amd64
#            graalvm-container: ghcr.io/graalvm/graalvm-ce:22.3.3
#          - arch: arm64
#            graalvm-container: ghcr.io/graalvm/graalvm-ce:22.3.3
#    container:
#      image: ${{ matrix.graalvm-container }}
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Check the project
#        run: ./gradlew check
#
#      - name: Build and push with Jib
#        env:
#          PLATFORM: ${{ matrix.platform }}
#          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
#          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#          ARCHITECTURE: ${{ matrix.arch }}
#          TAG: ${{ startsWith(github.ref, 'refs/tags/') && slice(github.ref, 11) }}
#        run: |
#          ./gradlew jibNativeImage
